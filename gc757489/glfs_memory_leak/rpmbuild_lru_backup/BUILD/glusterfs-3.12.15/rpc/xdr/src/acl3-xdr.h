/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ACL3_XDR_H_RPCGEN
#define _ACL3_XDR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#include "compat.h"
#include "xdr-nfs3.h"

struct aclentry {
	int type;
	int uid;
	int perm;
};
typedef struct aclentry aclentry;

struct getaclargs {
	netobj fh;
	int mask;
};
typedef struct getaclargs getaclargs;

struct getaclreply {
	int status;
	int attr_follows;
	struct fattr3 attr;
	int mask;
	int aclcount;
	struct {
		u_int aclentry_len;
		struct aclentry *aclentry_val;
	} aclentry;
	int daclcount;
	struct {
		u_int daclentry_len;
		struct aclentry *daclentry_val;
	} daclentry;
};
typedef struct getaclreply getaclreply;

struct setaclargs {
	netobj fh;
	int mask;
	int aclcount;
	struct {
		u_int aclentry_len;
		struct aclentry *aclentry_val;
	} aclentry;
	int daclcount;
	struct {
		u_int daclentry_len;
		struct aclentry *daclentry_val;
	} daclentry;
};
typedef struct setaclargs setaclargs;

struct setaclreply {
	int status;
	int attr_follows;
	struct fattr3 attr;
};
typedef struct setaclreply setaclreply;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_aclentry (XDR *, aclentry*);
extern  bool_t xdr_getaclargs (XDR *, getaclargs*);
extern  bool_t xdr_getaclreply (XDR *, getaclreply*);
extern  bool_t xdr_setaclargs (XDR *, setaclargs*);
extern  bool_t xdr_setaclreply (XDR *, setaclreply*);

#else /* K&R C */
extern bool_t xdr_aclentry ();
extern bool_t xdr_getaclargs ();
extern bool_t xdr_getaclreply ();
extern bool_t xdr_setaclargs ();
extern bool_t xdr_setaclreply ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ACL3_XDR_H_RPCGEN */
